<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2018/02/03/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;
</code></pre>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server
</code></pre>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate
</code></pre>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy
</code></pre>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
    
    <entry>
      <title></title>
      <url>/music/README.html</url>
      <content type="html"><![CDATA[<h1 id="音乐搜索器"><a href="#音乐搜索器" class="headerlink" title="音乐搜索器"></a>音乐搜索器</h1><p><a href="https://github.com/maicong/music/releases" target="_blank" rel="noopener"><img src="https://img.shields.io/github/release/maicong/music.svg?style=flat-square" alt="GitHub release"></a><br><a href="https://github.com/php-src/php" target="_blank" rel="noopener"><img src="https://img.shields.io/badge/php-%3E%205.4-orange.svg" alt="PHP version"></a><br><a href="#LICENSE"><img src="https://img.shields.io/badge/license-MIT-blue.svg" alt="GitHub license"></a></p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>麦葱特制多站合一音乐搜索解决方案，支持搜索试听以下网站音乐：</p>
<p><a href="http://music.163.com" target="_blank" rel="noopener">网易云音乐</a> <a href="http://y.qq.com" target="_blank" rel="noopener">QQ音乐</a> <a href="http://www.kugou.com" target="_blank" rel="noopener">酷狗音乐</a> <a href="http://www.kuwo.cn" target="_blank" rel="noopener">酷我音乐</a> <a href="http://www.xiami.com" target="_blank" rel="noopener">虾米音乐</a> <a href="http://music.baidu.com" target="_blank" rel="noopener">百度音乐</a> <a href="http://www.1ting.com" target="_blank" rel="noopener">一听音乐</a> <a href="http://music.migu.cn" target="_blank" rel="noopener">咪咕音乐</a> <a href="http://www.lizhi.fm" target="_blank" rel="noopener">荔枝FM</a> <a href="http://www.qingting.fm" target="_blank" rel="noopener">蜻蜓FM</a> <a href="http://www.ximalaya.com" target="_blank" rel="noopener">喜马拉雅FM</a> <a href="http://kg.qq.com" target="_blank" rel="noopener">全民K歌</a> <a href="http://5sing.kugou.com/yc" target="_blank" rel="noopener">5sing原创</a> <a href="http://5sing.kugou.com/fc" target="_blank" rel="noopener">5sing翻唱</a></p>
<p>数据调用的是各网站的 API 接口，有的接口并不是开放的，随时可能失效，本项目相关代码仅供参考。</p>
<h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p><a href="http://music.2333.me/" title="音乐搜索器" target="_blank" rel="noopener">http://music.2333.me/</a></p>
<p>如果获取有误或需要改进，欢迎提交 <a href="https://github.com/maicong/music/issues" target="_blank" rel="noopener">Issues</a></p>
<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p><a href="https://github.com/maicong/music/archive/master.zip" target="_blank" rel="noopener">📦 下载开发版</a> <a href="https://github.com/maicong/music/releases" target="_blank" rel="noopener">📦 获取稳定版</a></p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p><strong>1. 提示数据获取失败</strong></p>
<p>方案1：</p>
<pre><code>修改 index.php 文件里的 MC_PROXY 为您的代理地址
将 core/music.php 里需要代理的 URL &#39;proxy&#39; =&gt; false 改为 &#39;proxy&#39; =&gt; true
</code></pre><p>方案2：</p>
<pre><code>在 core/music.php 里查找 setTimeout，将其后面的数值 20 改为更大。
在 static/js/music.js 里查找 `timeout`，将其数值 30000 改为更大。
</code></pre><p>方案3：</p>
<pre><code>服务器要支持 curl。
更换服务器，选择延迟更低的服务器。
</code></pre><p><strong>2. 播放器显示 <code>Error happens ╥﹏╥</code></strong></p>
<p>音乐链接为空</p>
<pre><code>1. 音乐需要付费才能收听
2. 版权限制，外站无法获取
3. 服务器 IP 所在地不在源站允许的区域
4. 音乐下架了，链接被去除
</code></pre><p>音乐链接不为空</p>
<pre><code>1. 当前 IP 所在地因版权限制而无法播放
2. 音乐格式浏览器无法正常解析
</code></pre><p><strong>3. 国内接口优化</strong></p>
<p>如果你的网站在国内，打开 <a href="index.php">/index.php</a>，将 <code>define(&#39;MC_INTERNAL&#39;, 0);</code> 修改为 <code>define(&#39;MC_INTERNAL&#39;, 1);</code>，这样就可以取到咪咕和网易云音乐的 320k 音频了。</p>
<h2 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h2><p>请查看 <a href="CHANGELOG.md">CHANGELOG.md</a></p>
<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><ol>
<li>本站音频文件来自各网站接口，本站不会修改任何音频文件</li>
<li>音频版权来自各网站，本站只提供数据查询服务，不提供任何音频存储和贩卖服务</li>
</ol>
<h2 id="开源协议"><a href="#开源协议" class="headerlink" title="开源协议"></a>开源协议</h2><p>The MIT License (MIT)</p>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/music/CHANGELOG.html</url>
      <content type="html"><![CDATA[<h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><p>2018.09.26 <code>v1.6.2</code></p>
<ul>
<li>优化酷狗搜索结果</li>
<li>优化默认配置</li>
</ul>
<p>2018.06.11 <code>v1.6.1</code></p>
<ul>
<li>修复 QQ 音乐音频获取失败问题 (320k 暂时已失效)</li>
</ul>
<p>2018.05.24 <code>v1.6.0</code></p>
<ul>
<li>增加服务器国内外判断</li>
<li>更新咪咕接口，支持 320k 音频</li>
<li>优化网易云音乐接口</li>
</ul>
<p>2018.05.23 <code>v1.5.10</code></p>
<ul>
<li>修复 cc、top 域名使用外部资源403问题</li>
</ul>
<p>2018.03.05 <code>v1.5.9</code></p>
<ul>
<li>修复歌曲切换后相关信息显示错误问题</li>
</ul>
<p>2018.03.02 <code>v1.5.8</code></p>
<ul>
<li>修复咪咕地址解析失败问题</li>
</ul>
<p>2018.02.23 <code>v1.5.7</code></p>
<ul>
<li>增加歌词下载功能</li>
<li>修复网易云音乐地址为空问题</li>
</ul>
<p>2018.02.02 <code>v1.5.6</code></p>
<ul>
<li>增加音乐链接下载功能 (如果浏览器支持的话)</li>
<li>优化音乐信息显示框为不可编辑</li>
<li>优化代码</li>
</ul>
<p>2018.01.17 <code>v1.5.5</code></p>
<ul>
<li>增加 URL 参数传递</li>
<li>优化代码</li>
<li>移除对 SoundCloud 的支持</li>
</ul>
<p>2018.01.04 <code>v1.5.4</code></p>
<ul>
<li>更新代码兼容性</li>
<li>更新 meta 信息</li>
<li>修复代理检测</li>
<li>优化百度音乐外链地址</li>
<li>修复一听封面地址403问题</li>
<li>修复荔枝音频地址失效问题</li>
<li>更新说明</li>
</ul>
<p>2017.12.25 <code>v1.5.3</code></p>
<ul>
<li>增加对 全民K歌 的支持</li>
<li>搜索结果增加 载入更多 功能。</li>
</ul>
<p>2017.12.09 <code>v1.5.2</code></p>
<ul>
<li>更新帮助里的音乐地址</li>
<li>修复网易云音乐和百度音乐解析问题</li>
</ul>
<p>2017.12.08 <code>v1.5.1</code></p>
<ul>
<li>优化代码</li>
<li>更新说明</li>
</ul>
<p>2017.12.08 <code>v1.5.0</code></p>
<ul>
<li>更换播放器</li>
<li>增加歌词显示</li>
<li>更新接口</li>
</ul>
<p>2017.12.05 <code>v1.4.5</code></p>
<ul>
<li>修复网易云音乐音频数据不对应问题</li>
</ul>
<p>2017.12.05 <code>v1.4.4</code></p>
<ul>
<li>优化网易云音乐、虾米音乐、百度音乐接口</li>
</ul>
<p>2017.12.05 <code>v1.4.3</code></p>
<ul>
<li>优化酷狗音乐接口，支持 320k 音频</li>
</ul>
<p>2017.12.04 <code>v1.4.2</code></p>
<ul>
<li>优化代码</li>
</ul>
<p>2017.12.04 <code>v1.4.1</code></p>
<ul>
<li>优化 QQ 音乐品质</li>
</ul>
<p>2017.11.28 <code>v1.4.0</code></p>
<ul>
<li>优化接口和代码</li>
<li>优化 Curl 模块加载方式</li>
</ul>
<p>2017.09.12 <code>v1.3.0</code></p>
<ul>
<li>更新 QQ 音乐 API 接口</li>
</ul>
<p>2017.09.08 <code>v1.2.9</code></p>
<ul>
<li>优化模版代码</li>
<li>更新说明</li>
</ul>
<p>2017.09.06 <code>v1.2.8</code></p>
<ul>
<li>更新 5sing 接口</li>
<li>优化代码</li>
</ul>
<p>2017.09.04 <code>v1.2.7</code></p>
<ul>
<li>修复低版本提示显示编码问题</li>
</ul>
<p>2017.08.03 <code>v1.2.6</code></p>
<ul>
<li>更新页脚和注释</li>
</ul>
<p>2017.08.03 <code>v1.2.6</code></p>
<ul>
<li>增加低版本提示</li>
<li>优化 蜻蜓 FM 的 songid 代码</li>
</ul>
<p>2017.08.01 <code>v1.2.5</code></p>
<ul>
<li>增加对 喜马拉雅 FM 的支持</li>
<li>修复 url 无法获取问题</li>
</ul>
<p>2017.07.26 <code>v1.2.4</code></p>
<ul>
<li>优化代码兼容性</li>
</ul>
<p>2017.07.24 <code>v1.2.3</code></p>
<ul>
<li>优化目录结构和模版</li>
</ul>
<p>2017.07.20 <code>v1.2.2</code></p>
<ul>
<li>优化回调代码</li>
</ul>
<p>2017.07.20 <code>v1.2.1</code></p>
<ul>
<li>更新正则匹配规则</li>
</ul>
<p>2017.07.19 <code>v1.2.0</code></p>
<ul>
<li>修复正则表达式问题</li>
</ul>
<p>2017.07.19 <code>v1.1.9</code></p>
<ul>
<li>增加对蜻蜓 FM 的支持 (resolve <a href="https://github.com/maicong/music/issues/6" target="_blank" rel="noopener">#6</a>)</li>
</ul>
<p>2017.07.10 <code>v1.1.8</code></p>
<ul>
<li>修复 api 请求接口问题</li>
</ul>
<p>2017.07.05 <code>v1.1.7</code></p>
<ul>
<li>增加对 荔枝 FM 的支持</li>
</ul>
<p>2017.06.26 <code>v1.1.6</code></p>
<ul>
<li>修复数组写法兼容性</li>
</ul>
<p>2017.05.19 <code>v1.1.5</code></p>
<ul>
<li>修复 网易云音乐 音乐链接失效问题</li>
</ul>
<p>2017.04.28 <code>v1.1.4</code></p>
<ul>
<li>更新 QQ 音乐 API 接口</li>
<li>优化代码</li>
</ul>
<p>2017.04.21 <code>v1.1.3</code></p>
<ul>
<li>优化代码和播放器视觉</li>
</ul>
<p>2017.04.20 <code>v1.1.2</code></p>
<ul>
<li>更新音乐地址匹配规则</li>
</ul>
<p>2017.03.24 <code>v1.1.1</code></p>
<ul>
<li>移除对天天动听的支持</li>
<li>修复无法获取咪咕音乐的问题</li>
<li>更新 SoundCloud 的支持 client_id</li>
</ul>
<p>2017.03.23 <code>v1.1.0</code></p>
<ul>
<li>更新外链资源地址</li>
<li>优化代码</li>
</ul>
<p>2015.06.15 <code>v1.0.4</code></p>
<ul>
<li>增加对 SoundCloud 的支持</li>
<li>增加代理支持</li>
<li>修复音乐名称识别问题</li>
<li>优化代码</li>
</ul>
<p>2015.06.13 <code>v1.0.3</code></p>
<ul>
<li>增加对 天天动听、咪咕 的支持</li>
</ul>
<p>2015.06.12 <code>v1.0.2</code></p>
<ul>
<li>增加对 5sing 的支持 (开源发布)</li>
</ul>
<p>2015.06.12 <code>v1.0.1</code></p>
<ul>
<li>代码优化</li>
<li>修复 BUG</li>
</ul>
<p>2015.06.10 <code>v1.0.0</code></p>
<ul>
<li>音乐搜索器上线</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/music/core/composer.json</url>
      <content type="html"><![CDATA[{"require":{"php-curl-class/php-curl-class":"^8.0"}}]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/music/static/js/music.js</url>
      <content type="html"><![CDATA['use strict';

/**
 *
 * 音乐搜索器 - JS 文件
 *
 * @author  MaiCong <i@maicong.me>
 * @link    https://github.com/maicong/music
 * @since   1.5.9
 *
 */

$(function() {
  // 获取参数
  function q(key) {
    var value = null;
    var tmp = [];
    location.search
      .substr(1)
      .split('&')
      .forEach(function(v) {
        tmp = v.split('=');
        if (tmp[0] === key) {
          value = decodeURIComponent(tmp[1]);
        }
      });
    return value;
  }

  // 加入历史记录
  function pushState(title, link) {
    if (window.history && window.history.pushState) {
      window.history.pushState(null, title, link);
    }
  }

  // 获取 url
  function getUrl(path) {
    var url = location.href.split('?')[0];
    return path ? url + path : url;
  }

  // 申明变量
  var player = null;
  var playerList = [];
  var nopic = 'static/img/nopic.jpg';
  var qName = q('name');
  var qId = q('id');
  var qUrl = q('url');
  var qType = q('type');
  var siteTitle = document.title;

  // 如果参数存在 name/id 和 type
  if ((qName || qId) && qType) {
    setTimeout(function() {
      $('#j-input').val(qName || qId);
      $('#j-type input[value="' + qType + '"]').prop('checked', true);
      if (qName) {
        $('#j-nav [data-filter="name"]').trigger('click');
      }
      if (qId) {
        $('#j-nav [data-filter="id"]').trigger('click');
      }
      $('#j-validator').trigger('submit');
    }, 0);
  }

  // 如果参数存在 url
  if (qUrl) {
    setTimeout(function() {
      $('#j-type').hide();
      $('#j-input').val(qUrl);
      $('#j-nav [data-filter="url"]').trigger('click');
      $('#j-validator').trigger('submit');
    }, 0);
  }

  // Tab 切换
  $('#j-nav').on('click', 'li', function() {
    var holder = {
      name: '例如: 不要说话 陈奕迅',
      id: '例如: 25906124',
      url: '例如: http://music.163.com/#/song?id=25906124',
      pattern_name: '^.+$',
      pattern_id: '^[\\w\\/\\|]+$',
      pattern_url: '^https?:\\/\\/\\S+$'
    };
    var filter = $(this).data('filter');

    $(this)
      .addClass('am-active')
      .siblings('li')
      .removeClass('am-active');

    $('#j-input')
      .data('filter', filter)
      .attr({
        placeholder: holder[filter],
        pattern: holder['pattern_' + filter]
      })
      .removeClass('am-field-valid am-field-error am-active')
      .closest('.am-form-group')
      .removeClass('am-form-success am-form-error')
      .find('.am-alert')
      .hide();

    if (filter === 'url') {
      $('#j-type').hide();
    } else {
      $('#j-type').show();
    }
  });

  // 输入验证
  $('#j-validator').validator({
    onValid: function onValid(v) {
      $(v.field)
        .closest('.am-form-group')
        .find('.am-alert')
        .hide();
    },
    onInValid: function onInValid(v) {
      var $field = $(v.field);
      var $group = $field.closest('.am-form-group');
      var msgs = {
        name: '将 名称 和 作者 一起输入可提高匹配度',
        id: '输入错误，请查看下面的帮助',
        url: '输入错误，请查看下面的帮助'
      };
      var $alert = $group.find('.am-alert');
      var msg = msgs[$field.data('filter')] || this.getValidationMessage(v);

      if (!$alert.length) {
        $alert = $(
          '<div class="am-alert am-alert-danger am-animation-shake"></div>'
        )
          .hide()
          .appendTo($group);
      }
      $alert.html(msg).show();
    },
    submit: function submit(v) {
      v.preventDefault();
      if (this.isFormValid()) {
        var input = $.trim($('#j-input').val());
        var filter = $('#j-input').data('filter');
        var type =
          filter === 'url' ? '_' : $('input[name="music_type"]:checked').val();
        var page = 1;
        var $more = $('<div class="aplayer-more">载入更多</div>');
        var isload = false;
        var ajax = function ajax(input, filter, type, page) {
          $.ajax({
            type: 'POST',
            url: getUrl(),
            timeout: 30000,
            data: {
              input: input,
              filter: filter,
              type: type,
              page: page
            },
            dataType: 'json',
            beforeSend: function beforeSend() {
              isload = true;
              var title = document.title;
              switch (filter) {
                case 'name':
                  pushState(title, getUrl('?name=' + input + '&type=' + type));
                  break;
                case 'id':
                  pushState(title, getUrl('?id=' + input + '&type=' + type));
                  break;
                case 'url':
                  pushState(title, getUrl('?url=' + encodeURIComponent(input)));
                  break;
              }
              if (page === 1) {
                $('#j-input').attr('disabled', true);
                $('#j-submit').button('loading');
              } else {
                $more.text('请稍后...');
              }
            },
            success: function success(result) {
              if (result.code === 200 && result.data) {
                result.data.map(function(v) {
                  if (!v.title) v.title = '暂无';
                  if (!v.author) v.author = '暂无';
                  if (!v.pic) v.pic = nopic;
                  if (!v.lrc) v.lrc = '[00:00.00] 暂无歌词';
                  if (!/\[00:(\d{2})\./.test(v.lrc)) {
                    v.lrc = '[00:00.00] 无效歌词';
                  }
                });
                var setValue = function setValue(data) {
                  $('#j-link').val(data.link);
                  $('#j-link-btn').attr('href', data.link);
                  $('#j-src').val(data.url);
                  $('#j-src-btn').attr('href', data.url);
                  $('#j-lrc').val(data.lrc);
                  $('#j-lrc-btn').attr(
                    'href',
                    'data:application/octet-stream;base64,' +
                      btoa(unescape(encodeURIComponent(data.lrc)))
                  );
                  if ('download' in $('#j-src-btn')[0]) {
                    var name = data.title + '-' + data.author;
                    $('#j-src-btn').attr('download', name + '.mp3');
                    $('#j-lrc-btn').attr('download', name + '.lrc');
                    $('#j-src-btn-icon, #j-lrc-btn-icon')
                      .addClass('am-icon-download')
                      .removeClass('am-icon-external-link');
                  }
                  $('#j-songid').val(data.songid);
                  $('#j-name').val(data.title);
                  $('#j-author').val(data.author);
                };

                if (page === 1) {
                  if (player) {
                    player.pause();
                  }

                  playerList = result.data;

                  setValue(playerList[0]);

                  $('#j-validator').slideUp();
                  $('#j-main').slideDown();

                  player = new APlayer({
                    element: $('#j-player')[0],
                    autoplay: false,
                    narrow: false,
                    showlrc: 1,
                    mutex: false,
                    mode: 'circulation',
                    preload: 'metadata',
                    theme: '#0e90d2',
                    music: result.data
                  });

                  $('#j-player').append($more);

                  $more.on('click', function() {
                    if (isload) return;
                    page++;
                    ajax(input, filter, type, page);
                  });
                } else {
                  player.addMusic(result.data);
                  playerList = playerList.concat(result.data);
                }

                player.on('canplay', function() {
                  player.play();
                });
                player.on('play', function() {
                  var data = playerList[player.playIndex];
                  var img = new Image();
                  img.src = data.pic;
                  img.onerror = function() {
                    $('.aplayer-pic').css(
                      'background-image',
                      'url(' + nopic + ')'
                    );
                  };
                  document.title =
                    '正在播放: ' + data.title + ' - ' + data.author;
                  setValue(data);
                });
                player.on('ended', function() {
                  document.title = siteTitle;
                });
                if (result.data.length < 10) {
                  $more.hide();
                } else {
                  $more.text('载入更多');
                }
              } else {
                if (page === 1) {
                  $('#j-input')
                    .closest('.am-form-group')
                    .find('.am-alert')
                    .html(result.error || '(°ー°〃) 服务器好像罢工了')
                    .show();
                } else {
                  $more.text('没有了');
                  setTimeout(function() {
                    $more.slideUp();
                  }, 1000);
                }
              }
            },
            error: function error(e, t) {
              if (page === 1) {
                var err = '(°ー°〃) 出了点小问题，请重试';
                if (t === 'timeout') {
                  err = '(°ー°〃) 请求超时了，请稍后重试';
                }
                $('#j-input')
                  .closest('.am-form-group')
                  .find('.am-alert')
                  .html(err)
                  .show();
              } else {
                $more.text('(°ー°〃) 加载失败了，点击重试');
              }
            },
            complete: function complete() {
              isload = false;
              if (page === 1) {
                $('#j-input').attr('disabled', false);
                $('#j-submit').button('reset');
              }
            }
          });
        };

        ajax(input, filter, type, page);
      }
    }
  });

  $('#j-main input').focus(function() {
    $(this).select();
  });

  $('#j-more').on('click', function() {
    $(this).hide();
    $('#j-quote').removeClass('music-overflow');
  });

  $('#j-back').on('click', function() {
    if (player) {
      player.pause();
    }
    $('#j-validator').slideDown();
    $('#j-main').slideUp();
    $('#j-main input').val('');
    document.title = siteTitle;
  });
});
</i@maicong.me>]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/music/static/css/style.css</url>
      <content type="html"><![CDATA[/**
 *
 * 音乐搜索器 - CSS 文件
 *
 * @author  MaiCong <i@maicong.me>
 * @link    https://github.com/maicong/music
 * @since   1.5.4
 *
 */

html {
  font-family: -apple-system, BlinkMacSystemFont, 'San Francisco', 'Microsoft YaHei', 'PingFang SC',
    'Hiragino Sans GB', 'WenQuanYi Micro Hei', 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell',
    'Fira Sans', 'Droid Sans', 'Noto Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
}
body {
  margin: 0;
  -webkit-tap-highlight-color: transparent;
  -webkit-font-smoothing: subpixel-antialiased;
}
a {
  -webkit-transition: all .3s;
  transition: all .3s;
}
.about {
  background: #fff;
  color: #7f8c8d;
}
.about-color {
  color: #34495e;
}
.about-title {
  font-size: 180%;
  text-align: center;
}
.main {
  margin: 60px 0;
}
.music-tabs > li > a {
  padding: 0.5em 1em;
  cursor: pointer;
}
.music-main {
  display: none;
}
.music-main input {
  text-overflow: ellipsis;
}
.music-main input:focus,
.music-main input:hover {
  background: #eee;
  border-color: #ccc;
  color: #222;
}
.music-type .am-radio-inline,
.music-type label {
  color: #7f8c8d;
}
.music-type .am-icon-unchecked,
.music-type .am-icon-checked {
  color: #0e90d2;
}
.music-tips {
  margin-top: 50px;
}
.music-tips blockquote {
  font-family: Menlo, Monaco, Consolas, 'Courier New', monospace;
  font-size: 14px;
  margin-top: 30px;
}
.music-tips p span {
  display: inline-block;
  min-width: 50px;
}
.music-tips p b {
  font-weight: 500;
  color: #c7254e;
}
.music-overflow {
  max-height: 200px;
  overflow: hidden;
}
.music-more {
  padding: 10px;
  text-align: center;
  font-size: 14px;
  color: #666;
  background: #eee;
  cursor: pointer;
}
.footer {
  position: relative;
  left: 0;
  bottom: 0;
  width: 100%;
  overflow: hidden;
}
.footer p {
  color: #7f8c8d;
  margin: 0;
  padding: 15px;
  text-align: center;
  background: #2d3e50;
}
.footer p a {
  color: #7f8c8d;
}
.footer p a:hover {
  color: #bbb;
}
.footer a {
  text-decoration: underline;
}
.am-alert {
  display: none;
}
.am-popup-bd {
  height: 100%;
}
.aplayer {
  padding: 10px !important;
  margin: 0 !important;
  border: 1px solid #ccc;
}
.aplayer .aplayer-info .aplayer-music .aplayer-title,
.aplayer .aplayer-info .aplayer-music .aplayer-author {
  font-size: 16px !important;
  color: #555 !important;
}

.aplayer .aplayer-list ol li .aplayer-list-index {
  display: inline-block;
  width: 20px;
  text-align: right;
}
.aplayer .aplayer-lrc p {
  color: #0e90d2 !important;
}
.aplayer .aplayer-more {
  position: relative;
  font-size: 12px;
  padding: 8px 10px;
  margin-top: 10px;
  text-align: center;
  color: #888;
  cursor: pointer;
  -webkit-transition: color .3s;
  transition: color .3s;
}
.aplayer .aplayer-more:hover,
.aplayer .aplayer-more:active {
  color: #0e90d2;
}

.aplayer.aplayer-withlrc .aplayer-pic {
  width: 120px !important;
  height: 120px !important;
  -webkit-box-shadow: inset 0 0 3px 0 rgba(0, 0, 0, .5);
  box-shadow: inset 0 0 3px 0 rgba(0, 0, 0, .5);
}
.aplayer.aplayer-withlrc .aplayer-info {
  margin-left: 120px !important;
  height: 120px !important;
}
.aplayer.aplayer-withlist .aplayer-info {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  border-bottom: 0 !important;
}
.aplayer.aplayer-withlist .aplayer-list {
  height: auto !important;
  padding-top: 20px;
  -webkit-transition: none;
  transition: none;
}
.aplayer.aplayer-withlist .aplayer-list-hide {
  padding: 0;
}
</i@maicong.me>]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/music/core/vendor/composer/installed.json</url>
      <content type="html"><![CDATA[[{"name":"php-curl-class/php-curl-class","version":"8.0.0","version_normalized":"8.0.0.0","source":{"type":"git","url":"https://github.com/php-curl-class/php-curl-class.git","reference":"dc8282d086362d946520781c8908e0b084f01438"},"dist":{"type":"zip","url":"https://files.phpcomposer.com/files/php-curl-class/php-curl-class/dc8282d086362d946520781c8908e0b084f01438.zip","reference":"dc8282d086362d946520781c8908e0b084f01438","shasum":""},"require":{"ext-curl":"*","php":">=5.3"},"require-dev":{"phpunit/phpunit":"*","squizlabs/php_codesniffer":"*"},"time":"2017-11-02T06:07:25+00:00","type":"library","installation-source":"dist","autoload":{"psr-4":{"Curl\\":"src/Curl/"}},"notification-url":"https://packagist.org/downloads/","license":["Unlicense"],"authors":[{"name":"Zach Borboa"}],"description":"PHP Curl Class makes it easy to send HTTP requests and integrate with web APIs.","homepage":"https://github.com/php-curl-class/php-curl-class","keywords":["api","class","client","curl","framework","http","http client","json","php","requests","rest","restful","web service","xml"]}]]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/music/core/vendor/php-curl-class/php-curl-class/SECURITY.html</url>
      <content type="html"><![CDATA[<h1 id="Security-Considerations"><a href="#Security-Considerations" class="headerlink" title="Security Considerations"></a>Security Considerations</h1><h3 id="Url-may-point-to-system-files"><a href="#Url-may-point-to-system-files" class="headerlink" title="Url may point to system files"></a>Url may point to system files</h3><ul>
<li>Don’t blindly accept urls from users as they may point to system files. Curl supports many protocols including <code>FILE</code>.<br>The following would show the contents of <code>file:///etc/passwd</code>.</li>
</ul>
<pre><code class="bash"># Attacker.
$ curl https://www.example.com/display_webpage.php?url=file%3A%2F%2F%2Fetc%2Fpasswd
</code></pre>
<pre><code class="php">// display_webpage.php
$url = $_GET[&#39;url&#39;]; // DANGER!
$curl = new Curl();
$curl-&gt;get($url);
echo $curl-&gt;response;
</code></pre>
<p>Safer:</p>
<pre><code class="php">function is_website_url($url, $allowed_schemes = array(&#39;http&#39;, &#39;https&#39;)) {
    $validate_url = !(filter_var($url, FILTER_VALIDATE_URL) === false);
    $scheme = parse_url($url, PHP_URL_SCHEME);
    return $validate_url &amp;&amp; in_array($scheme, $allowed_schemes, true);
}

$url = $_GET[&#39;url&#39;];
if (!is_website_url($url)) {
    die(&#39;Unsafe url detected.&#39;);
}
</code></pre>
<h3 id="Url-may-point-to-internal-urls"><a href="#Url-may-point-to-internal-urls" class="headerlink" title="Url may point to internal urls"></a>Url may point to internal urls</h3><ul>
<li>Url may point to internal urls including those behind a firewall (e.g. <a href="http://192.168.0.1/" target="_blank" rel="noopener">http://192.168.0.1/</a> or ftp://192.168.0.1/). Use<br>a whitelist to allow certain urls rather than a blacklist.</li>
</ul>
<h3 id="Request-data-may-refer-to-system-files"><a href="#Request-data-may-refer-to-system-files" class="headerlink" title="Request data may refer to system files"></a>Request data may refer to system files</h3><ul>
<li>Request data prefixed with the <code>@</code> character may have special interpretation and read from system files.</li>
</ul>
<pre><code class="bash"># Attacker.
$ curl https://www.example.com/upload_photo.php --data &quot;photo=@/etc/passwd&quot;
</code></pre>
<pre><code class="php">// upload_photo.php
$curl = new Curl();
$curl-&gt;post(&#39;http://www.anotherwebsite.com/&#39;, array(
    &#39;photo&#39; =&gt; $_POST[&#39;photo&#39;], // DANGER!
));
</code></pre>
<h3 id="Unsafe-response-with-redirection-enabled"><a href="#Unsafe-response-with-redirection-enabled" class="headerlink" title="Unsafe response with redirection enabled"></a>Unsafe response with redirection enabled</h3><ul>
<li>Requests with redirection enabled may return responses from unexpected sources.<br>Downloading <a href="https://www.example.com/image.png" target="_blank" rel="noopener">https://www.example.com/image.png</a> may redirect and download <a href="https://www.evil.com/virus.exe" target="_blank" rel="noopener">https://www.evil.com/virus.exe</a></li>
</ul>
<pre><code class="php">$curl = new Curl();
$curl-&gt;setOpt(CURLOPT_FOLLOWLOCATION, true); // DANGER!
$curl-&gt;download(&#39;https://www.example.com/image.png&#39;, &#39;my_image.png&#39;);
</code></pre>
<pre><code class="php">$curl = new Curl();
$curl-&gt;setOpt(CURLOPT_FOLLOWLOCATION, true); // DANGER!
$curl-&gt;get(&#39;https://www.example.com/image.png&#39;);
</code></pre>
<h3 id="Keep-SSL-protections-enabled"><a href="#Keep-SSL-protections-enabled" class="headerlink" title="Keep SSL protections enabled"></a>Keep SSL protections enabled</h3><ul>
<li>Do not disable SSL protections.</li>
</ul>
<pre><code class="php">curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false); // DANGER!
curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false); // DANGER!
</code></pre>
]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>/music/core/vendor/php-curl-class/php-curl-class/composer.json</url>
      <content type="html"><![CDATA[{"name":"php-curl-class/php-curl-class","description":"PHP Curl Class makes it easy to send HTTP requests and integrate with web APIs.","homepage":"https://github.com/php-curl-class/php-curl-class","license":"Unlicense","keywords":["php","curl","class","api","client","framework","http client","http","json","requests","rest","restful","web service","xml"],"authors":[{"name":"Zach Borboa"}],"require":{"php":">=5.3","ext-curl":"*"},"require-dev":{"phpunit/phpunit":"*","squizlabs/php_codesniffer":"*"},"autoload":{"psr-4":{"Curl\\":"src/Curl/"}}}]]></content>
    </entry>
    
  
</search>
